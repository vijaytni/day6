1. Fix the code to get the largest of three.
let f,s,t;

aa = (f,s,t) => {
    console.log(f,s,t);
    if(f>s &&f>t){
    console.log(f)}
    else if(s>f && s>t){
    console.log(s)}
    else{
    console.log(t)}
}
    
console.log(aa(5,2,13));
2. Fix the code to Sum of the digits present in the number
let n = 123;
console.log(add(n));
function add(n)
{
let sum = 10;
while (n != 0) {
    sum = sum + n % 10;
    n = parseInt(n / 10);
}
 return sum;
}
3.Fix the code to Sum of all numbers using IIFE function

const arr = [9,8,5,6,4,3,2,1];(function() {
 let sum = 0;
 for (var i = 0; i <= arr.length; i++);{
 sum += arr[i];
 }
 console.log(sum);
 return sum;
})();

const arr = [9,8,5,6,4,3,2,1,1];
const sumNumber = (arr)=> {
     let sum = 0;
 
      for (var i = 0; i < arr.length; i++){
        sum = sum + parseInt(arr[i]);
      }
    console.log(sum);
    return sum;
}
console.log(sumNumber(arr));

4. 

var arr = ["guvi", "geek", "zen", "fullstack"];


var ano = function(arro) {
    for (var i = 0; i <= arro.length; i++) {
    console.log(arro[i][0].toUpperCase() + arro[i].substr(1));
    }
   }
   ano(arr);

5. Fix the code to return the Prime numbers
const newArray=[1,3,2,5,10];
const myPrime=newArray.filter(num=>{
 for(let i=2;i<=num;i++){
 if(num%i===0)
 {
 return true;
 }
 }
 return num===1;
});
console.log(myPrime);


const newArray=[1,3,2,5,10];
const myPrime=newArray.filter(num=>{
    console.log("Function");
 for(let i=2;i<num;i++){
    console.log("Function");
 
 if(num%i==0)
    {
    return false;
    }
 }
 if (num == 1) {
    return false;
 }
 return num=1;
});
console.log(myPrime)

6. Fix the code to sum the number in that array









